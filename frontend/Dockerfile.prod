#https://www.docker.com/blog/how-to-dockerize-react-app/

# Stage 1: Build the React app
FROM node:18-alpine AS build
WORKDIR /frontend

# Set NODE_ENV to production for the build process
ENV NODE_ENV=production

# Leverage caching by installing dependencies first
COPY package.json package-lock.json ./
RUN npm ci

# Copy the rest of the application code and build for production
# Copy the production environment file
COPY public public
COPY src src
RUN npm run build

# Stage 2: Production environment
FROM nginx:alpine AS production

# Copy the production build artifacts from the build stage
COPY --from=build /frontend/build /usr/share/nginx/html

RUN rm /etc/nginx/conf.d/default.conf
#COPY nginx/cert.pem /var/certs/cert/
#COPY nginx/key.pem /var/certs/key/
COPY nginx/dev.conf /etc/nginx/conf.d

EXPOSE 433
ENTRYPOINT ["nginx", "-g", "daemon off;"]