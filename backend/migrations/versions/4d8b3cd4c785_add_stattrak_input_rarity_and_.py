"""Add stattrak, input_rarity and collections to Tradeup. Also added OutputTradeupEntry. Modified some column types

Revision ID: 4d8b3cd4c785
Revises: 27a6ee7b8164
Create Date: 2024-07-20 18:56:06.438861

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '4d8b3cd4c785'
down_revision = '27a6ee7b8164'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('tradeup_entry')
    with op.batch_alter_table('tradeup', schema=None) as batch_op:
        batch_op.add_column(sa.Column('stattrak', sa.Boolean(), nullable=False))
        batch_op.add_column(sa.Column('input_rarity', sa.String(), nullable=False))
        batch_op.alter_column('name',
               existing_type=sa.VARCHAR(),
               nullable=True)
        batch_op.drop_constraint('uq_tradeup_name', type_='unique')
        batch_op.drop_column('tracked')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('tradeup', schema=None) as batch_op:
        batch_op.add_column(sa.Column('tracked', sa.BOOLEAN(), nullable=False))
        batch_op.create_unique_constraint('uq_tradeup_name', ['name'])
        batch_op.alter_column('name',
               existing_type=sa.VARCHAR(),
               nullable=False)
        batch_op.drop_column('input_rarity')
        batch_op.drop_column('stattrak')

    op.create_table('tradeup_entry',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('skin_condition_id', sa.INTEGER(), nullable=False),
    sa.Column('float', sa.FLOAT(), nullable=False),
    sa.Column('count', sa.INTEGER(), nullable=False),
    sa.Column('tradeup_id', sa.INTEGER(), nullable=False),
    sa.ForeignKeyConstraint(['skin_condition_id'], ['skin_conditions.id'], ),
    sa.ForeignKeyConstraint(['tradeup_id'], ['tradeup.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###
