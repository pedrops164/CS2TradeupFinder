services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    volumes:
      - './backend:/usr/src/backend'
    ports:
      - 5002:5000
    environment:
      - FLASK_CONFIG=development
      - FLASK_ENV=development
      - SQLALCHEMY_DATABASE_URI=postgresql://postgres:password@db:5432/database

    depends_on:
      db:
        condition: service_healthy

  nginx:
    build:
      context: ./nginx
      dockerfile: Dockerfile
    restart: unless-stopped
    ports:
      - 8080:8080
    depends_on:
      - backend
      - frontend

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    volumes:
      - './frontend:/usr/src/frontend'
      - '/usr/src/frontend/node_modules'
    ports:
      - 8081:3000
    environment:
      - NODE_ENV=development
      - REACT_APP_SERVICE_URL=http://localhost:8080
      - WATCHPACK_POLLING=true
      - CHOKIDAR_USEPOLLING=true
    depends_on:
      - backend

  db:
    #container_name: postgres
    image: postgres:latest
    restart: unless-stopped
    ports:
      - 5432:5432
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: database
    volumes:
      - ./init_data.sql:/docker-entrypoint-initdb.d/init_data.sql
      - ./db:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -q -d database -U postgres -h localhost"]
      interval: 15s
      timeout: 10s
      retries: 10

volumes:
  db: